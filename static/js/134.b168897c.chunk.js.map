{"version":3,"file":"static/js/134.b168897c.chunk.js","mappings":"6QAoFA,UA1Ee,WAEX,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACrBC,GAAWC,EAAAA,EAAAA,MAIrB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAoCA,OACI,iCAEI,kBAAMC,SArCQ,SAACC,GAGnB,GAFAA,EAAEC,iBAEY,KAAVT,GAA0B,OAAVA,EAEhB,OAAOU,EAAAA,GAAAA,MAAY,oCACf,IAOOC,EAPR,mCAOP,+FACMC,EADN,+BACoCC,EADpC,iCACoEb,EADpE,wCAE2Bc,EAAAA,EAAAA,IAAUF,GAFrC,cAEUG,EAFV,gBAIqCA,EAASC,KAAKC,QAAQC,KAAI,YACnD,MAAO,CAAEC,GAD6D,EAAhBA,GACzCC,MADyD,EAAZA,MAE7D,IANT,OAIUC,EAJV,OASAf,GAAe,OAAIe,IATnB,2CAPO,qDAGGR,EAAU,mCAEpBC,EAAAA,EAAAA,SAAAA,QADiB,gCAgBrBH,GAKC,EAMO,WAEN,kBACEW,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAAAhB,GAAC,OAAIT,EAAgB,CAAEC,MAAOQ,EAAEiB,OAAOF,OAAtC,KAEH,mBAASD,KAAK,SAASI,UAAU,SAAjC,UACY,SAAC,MAAD,UAIhB,wBACKrB,EAAYa,KAAI,SAAAS,GAAI,OACjB,yBAAkB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKR,IAAMU,MAAO,CAAEC,KAAM5B,GAA/C,SAA4DyB,EAAKP,SAA1EO,EAAKR,GADG,OAMzB,SAAC,KAAD,CACFY,UAAW,IACXC,SAAS,YACHC,MAAM,cAGrB,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Routes, Route, NavLink, Link, useParams, useSearchParams, Outlet, useLocation  } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Field, Form, Formik, } from 'formik';\nimport { FaSearch } from 'react-icons/fa/';\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst Movies = () => {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n        const location = useLocation();\n\n\n\n    const [querySearch, setQuerySearch] = useState([])\n\n    const onSearchClick = (e) => {\n        e.preventDefault()\n\n        if (query === \"\" || query === null) {\n            \n            return toast.error('The search field cannot be empty');\n        } else {\n\n\n            const API_KEY = '192012529bcb26605650afbe6892300f'\n        const BASE_URL = 'https://api.themoviedb.org/3/'\n        axios.defaults.baseURL = BASE_URL;\n        \n        async function movieSearch() {\n        const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n            const response = await axios.get(url)\n            \n            const popularMoviesArray = await response.data.results.map(({ id, title }) => {\n                    return { id, title }\n                })\n        \n     \n        setQuerySearch([...popularMoviesArray])\n        // console.log(popularMoviesArray);\n        // console.log(response.data.results);\n    }\n    movieSearch()\n        }\n\n        \n\n    }\n\n\n    return (\n        <>\n            \n            <form onSubmit={onSearchClick}>\n      {/* <h1>Products</h1> */}\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setSearchParams({ query: e.target.value })}\n                />\n                <button  type=\"submit\" className=\"button\">\n                            <FaSearch/>\n                </button>\n            </form>\n            \n            <ul>\n                {querySearch.map(item => (\n                    <li key={item.id}><Link to={`/movies/${item.id}`} state={{ from: location }}>{item.title}</Link></li>\n                ))}\n            </ul>\n\n            \n            <ToastContainer\n          autoClose={3000}\n          position=\"top-right\"\n                theme=\"colored\"\n/>\n    </>)\n}\n\nexport default Movies;"],"names":["useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useState","querySearch","setQuerySearch","onSubmit","e","preventDefault","toast","movieSearch","url","API_KEY","axios","response","data","results","map","id","title","popularMoviesArray","type","value","onChange","target","className","item","to","state","from","autoClose","position","theme"],"sourceRoot":""}
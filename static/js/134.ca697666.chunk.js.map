{"version":3,"file":"static/js/134.ca697666.chunk.js","mappings":"2RASMA,EAAcC,EAAAA,EAAAA,GAAH,qEAMXC,EAAYD,EAAAA,EAAAA,OAAH,sUA+Gf,UAlGe,WAEX,OAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAIjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAyCA,OACI,iBAAKC,MAAO,CACRC,QAAS,OACTC,cAAe,SACfC,QAAS,QAHb,WAMJ,kBAAMC,SA9CgB,SAACC,GAGnB,GAFAA,EAAEC,iBAEY,KAAVb,GAA0B,OAAVA,EAEhB,OAAOc,EAAAA,GAAAA,MAAY,oCACf,IAOWC,EAPZ,mCAOH,wGAGcC,EAHd,+BAG4CC,EAH5C,iCAG4EjB,EAH5E,wCAI+BkB,EAAAA,EAAAA,IAAUF,GAJzC,cAIcG,EAJd,gBAMkCA,EAASC,KAAKC,QAAQC,KAAI,YACpD,MAAO,CAAEC,GAD8D,EAAhBA,GAC1CC,MAD0D,EAAZA,MAE9D,IARL,OAMcC,EANd,OAWQnB,GAAe,OAAImB,IAX3B,kDAaQC,QAAQC,IAAR,MAbR,0DAPG,qDAGDV,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADiB,gCAqBjBH,GAKH,EAU8BR,MAAO,CAC1BC,QAAS,OAEToB,WAAY,UAHxB,WAME,kBACEC,KAAK,OACLC,MAAO9B,EACK+B,SAAU,SAAAnB,GAAC,OAAIb,EAAgB,CAAEC,MAAOY,EAAEoB,OAAOF,OAAtC,EACXvB,MAAO,CACH0B,OAAQ,OACRC,MAAO,QACPC,SAAU,WAG1B,SAACvC,EAAD,CAAWiC,KAAK,SAAhB,UACoB,SAAC,MAAD,CAAWtB,MAAO,CACd0B,OAAQ,OACRzB,QAAS,OACToB,WAAY,kBAMhC,wBACKvB,EAAYiB,KAAI,SAAAc,GAAI,OACjB,SAAC1C,EAAD,WAA2B,SAAC,KAAD,CAAM2C,GAAE,kBAAaD,EAAKb,IAAMe,MAAO,CAAEC,KAAMrC,GAAYK,MAAO,CAAEiC,MAAO,QAASC,eAAe,QAAnG,SAA8GL,EAAKZ,SAA5HY,EAAKb,GADN,OAMzB,SAAC,KAAD,CACImB,UAAW,IACXC,SAAS,YACTC,MAAM,UACNrC,MAAO,CAAE4B,SAAS,YAGjC,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState} from \"react\";\nimport { Link, useSearchParams, useLocation  } from \"react-router-dom\";\nimport axios from 'axios';\nimport { FaSearch } from 'react-icons/fa/';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styled from '@emotion/styled'\n\nconst StyledLinks = styled.li`\n    :hover {\n        color: #E186D6\n    }\n`\n\nconst StyledBtn = styled.button`\n                height: 35px;\n                border: none;\n                font: inherit;\n                color: inherit;\n                background-color: #E186D6;\n                color: white;\n                :hover {\n                        background-color: #dd9bd5\n                    }\n`\n\n\nconst Movies = () => {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    const location = useLocation();\n\n\n\n    const [querySearch, setQuerySearch] = useState([])\n\n    const onSearchClick = (e) => {\n        e.preventDefault()\n\n        if (query === \"\" || query === null) {\n            \n            return toast.error('The search field cannot be empty');\n        } else {\n\n\n        const API_KEY = '192012529bcb26605650afbe6892300f'\n        const BASE_URL = 'https://api.themoviedb.org/3/'\n        axios.defaults.baseURL = BASE_URL;\n        \n            async function movieSearch() {\n            \n                try {\n                    const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n                    const response = await axios.get(url)\n            \n                    const MoviesArray = await response.data.results.map(({ id, title }) => {\n                    return { id, title }\n                })\n        \n     \n                    setQuerySearch([...MoviesArray])\n                } catch (error) {\n                    console.log(error);\n                }\n            \n      \n    }\n        movieSearch()\n    }\n\n        \n\n    }\n\n\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '40px',\n        }}>\n            \n    <form onSubmit={onSearchClick} style={{\n                display: 'flex',\n                // justifyContent: 'center',\n                alignItems: 'center'\n        }}>\n      {/* <h1>Products</h1> */}\n      <input\n        type=\"text\"\n        value={query}\n                    onChange={e => setSearchParams({ query: e.target.value })}\n                    style={{\n                        height: '30px',\n                        width: '300px',\n                        fontSize: '20px'\n        }}\n                />\n        <StyledBtn type=\"submit\" >\n                            <FaSearch  style={{\n                                height: '30px',\n                                display: 'flex',\n                                alignItems: 'center'\n\n        }}/>\n        </StyledBtn>\n        </form>\n            \n            <ul>\n                {querySearch.map(item => (\n                    <StyledLinks key={item.id}><Link to={`/movies/${item.id}`} state={{ from: location }} style={{ color: 'black', textDecoration:'none',}}>{item.title}</Link></StyledLinks>\n                ))}\n            </ul>\n\n            \n            <ToastContainer\n                autoClose={3000}\n                position=\"top-right\"\n                theme=\"colored\"\n                style={{ fontSize:'30px'}}\n/>\n    </div>)\n}\n\nexport default Movies;"],"names":["StyledLinks","styled","StyledBtn","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useState","querySearch","setQuerySearch","style","display","flexDirection","padding","onSubmit","e","preventDefault","toast","movieSearch","url","API_KEY","axios","response","data","results","map","id","title","MoviesArray","console","log","alignItems","type","value","onChange","target","height","width","fontSize","item","to","state","from","color","textDecoration","autoClose","position","theme"],"sourceRoot":""}
{"version":3,"file":"static/js/43.5111a9fd.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { Link, useParams, Outlet, useLocation } from \"react-router-dom\";\n\nexport const GoBackBtn = styled(Link)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #E186D6;\n    color: white;\n    font-size: 40px;\n    text-decoration: none;\n    border-radius: 50%;\n    width: 40px;\n    padding: 10px;\n    margin: 20px;\n    margin-left: 0px;\n\n    :hover{\n        background-color: #dd9bd5;\n    }\n`;\n\nexport const MovieContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    /* padding-left: 20px; */\n    padding-right: 150px;\n`\n\nexport const MovieInfo = styled.div`\n    margin-left: 30px;\n    /* height: 600px; */\n`\n\nexport const AdditionalInfo = styled.div`\n    display: flex;\n    /* flex-direction: column; */\n    /* justify-content: center; */\n    align-items: center;\n    margin-top: 20px;\n    \n`\n\nexport const PageLink = styled(Link)`\n    display: flex;\n    /* flex-direction: column; */\n    justify-content: center;\n    align-items: center;\n    \n    \n    margin-top: 20px;\n    font-size: 40px;\n    text-decoration: none;\n    border-radius: 6px;\n    width: 150px;\n    padding: 10px;\n    /* margin: 20px; */\n\n    background-color: #E186D6;\n    color: white;\n\n    :last-of-type{\n        margin-left: 50px;\n    }\n\n    :hover{\n        background-color: #dd9bd5;\n    }\n    \n`\nexport const MovieName = styled.div`\nmargin-bottom: 20px;\n`\n\nexport const MovieGenres = styled.div`\nmargin-bottom: 20px;\n`\nexport const MovieOverview = styled.div`\nmargin-bottom: 20px;\n`\n\n","import { Suspense } from \"react\";\nimport { Link, useParams, Outlet, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { AdditionalInfo, GoBackBtn, MovieInfo, MovieContainer, PageLink, MovieName, MovieGenres, MovieOverview } from \"./MovieCard.styled\";\nimport { FaArrowLeft } from 'react-icons/fa/';\n\n\nexport function MovieCard({ moviesRender }) {\n    const {poster, title, date, genreList, overview, rate} = moviesRender\n    const location = useLocation();\n    \n    // console.log(moviesRender);\n    return (\n    <div style={{\n                height: '100vh',\n                display: 'flex',\n                flexDirection: 'column',\n                // justifyContent: 'center',\n        \n        \n        }}>\n        { moviesRender !== undefined && (\n         <>\n        <GoBackBtn to={location.state?.from ?? \"/\"}><FaArrowLeft/></GoBackBtn>   \n       \n            <MovieContainer>\n            <div>\n            <img src={poster} alt=\"\" \n                                 />\n            </div>\n                        \n            <MovieInfo>\n            <MovieName><h3>{title} ({date})</h3></MovieName>\n            <MovieGenres><b>Genres:</b> {genreList}</MovieGenres>\n            <MovieOverview><b>Overview:</b> {overview}</MovieOverview>\n            <div><b>Rating:</b> {rate}</div>\n                            \n                <AdditionalInfo>       \n                    <PageLink to=\"cast\">cast</PageLink>\n                    <PageLink to=\"reviews\">reviews</PageLink>\n                </AdditionalInfo>  \n            </MovieInfo>\n        </MovieContainer>    \n                    \n           \n            \n            <Suspense fallback={<div>Loading page...</div>}>\n                     <Outlet />\n            </Suspense>\n                \n          </>         \n        )}\n             \n        </div>\n    )\n}\n\nMovieCard.propTypes = {\nmoviesRender: PropTypes.shape({\n    poster: PropTypes.string,\n    title: PropTypes.string,\n    date: PropTypes.string,\n    genreList: PropTypes.string,\n    overview: PropTypes.string,\n    rate: PropTypes.string,\n  }).isRequired\n}","import { useState, useEffect } from \"react\";\n// import { Suspense } from \"react\";\nimport { Link, useParams, Outlet, useLocation  } from \"react-router-dom\";\nimport axios from 'axios';\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport { fetchMovie } from \"services/API\";\n\n\n\nconst MovieDetails = () => {\n    const [movieInfo, setMovieInfo] = useState({})\n    const { moviesId } = useParams();\n\n\n    useEffect(() => {\n    \n    async function chosenMovie() {\n        setMovieInfo(null)\n\n        try {\n            const response = await fetchMovie({ fetchInfo: `movie/${moviesId}?language=en-US` })\n          \n\n            function normalizeMovie ({ poster_path, overview, genres, popularity, release_date, id, title, vote_average }) {\n                const poster = poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : 'https://placehold.co/500x750/png'\n\n                const genreList = genres.map(item => item.name).join(' ');\n\n                const date = release_date\n                    ? release_date.split('-')[0]\n                    : 'No release information';\n                \n                const rate = vote_average.toFixed(1);\n                \n\n                return {poster, overview, genreList, popularity, date, id, title, rate }\n            }\n                \n            \n            const movies = await normalizeMovie(response.data)\n           \n            await setMovieInfo(movies)\n       \n            } catch (error) {\n                console.log(error);\n            }\n            \n    }\n\n\n\n        chosenMovie()\n        \n}, [moviesId])\n    \n   \n    \n    return (<div style={{padding: '40px',}}>\n        \n        {movieInfo !== null && (<MovieCard moviesRender={movieInfo} />)}\n            \n            </div>)\n}\n\nexport default MovieDetails;","import axios from 'axios';\nconst API_KEY = '192012529bcb26605650afbe6892300f'\nconst BASE_URL = 'https://api.themoviedb.org/3/'\naxios.defaults.baseURL = BASE_URL;\n\n\n\nexport async function fetchMovie({fetchInfo}) {\n\n    try {\n        \n        const response = await axios.get(fetchInfo, {params: {api_key: API_KEY}})\n        return response\n\n    } catch (error) {\n        console.log(error);\n    }\n    \n}"],"names":["GoBackBtn","styled","Link","MovieContainer","MovieInfo","AdditionalInfo","PageLink","MovieName","MovieGenres","MovieOverview","MovieCard","moviesRender","poster","title","date","genreList","overview","rate","location","useLocation","style","height","display","flexDirection","undefined","to","state","from","src","alt","Suspense","fallback","useState","movieInfo","setMovieInfo","moviesId","useParams","useEffect","normalizeMovie","poster_path","genres","popularity","release_date","id","vote_average","map","item","name","join","split","toFixed","fetchMovie","fetchInfo","response","data","movies","console","log","chosenMovie","padding","API_KEY","axios","params","api_key"],"sourceRoot":""}